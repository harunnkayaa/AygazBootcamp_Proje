{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0929792a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Taş, Kağıt, Makas Oyununa Hoşgeldiniz!\n",
      "Oyunun kuralları basit: Taş makası yener, Makas kağıdı yener, Kağıt taşı yener.\n",
      "İlk iki turu kazanan oyunu kazanır. İyi şanslar!\n",
      "\n",
      "Tur 1 - Oyuncu 0 - Bilgisayar 0\n",
      "Lütfen seçiminizi yapın (Taş, Kağıt, Makas veya Çıkış): TAŞ\n",
      "Bilgisayarın seçimi: Taş\n",
      "Berabere!\n",
      "Skor: Oyuncu 0 - Bilgisayar 0\n",
      "\n",
      "Tur 2 - Oyuncu 0 - Bilgisayar 0\n",
      "Lütfen seçiminizi yapın (Taş, Kağıt, Makas veya Çıkış): TAŞ\n",
      "Bilgisayarın seçimi: Kağıt\n",
      "Bu turu bilgisayar kazandı!\n",
      "Skor: Oyuncu 0 - Bilgisayar 1\n",
      "\n",
      "Tur 3 - Oyuncu 0 - Bilgisayar 1\n",
      "Lütfen seçiminizi yapın (Taş, Kağıt, Makas veya Çıkış): TAŞ\n",
      "Bilgisayarın seçimi: Makas\n",
      "Bu turu kazandınız!\n",
      "Skor: Oyuncu 1 - Bilgisayar 1\n",
      "\n",
      "Tur 4 - Oyuncu 1 - Bilgisayar 1\n",
      "Lütfen seçiminizi yapın (Taş, Kağıt, Makas veya Çıkış): TAŞ\n",
      "Bilgisayarın seçimi: Taş\n",
      "Berabere!\n",
      "Skor: Oyuncu 1 - Bilgisayar 1\n",
      "\n",
      "Tur 5 - Oyuncu 1 - Bilgisayar 1\n",
      "Lütfen seçiminizi yapın (Taş, Kağıt, Makas veya Çıkış): TAŞ\n",
      "Bilgisayarın seçimi: Makas\n",
      "Bu turu kazandınız!\n",
      "Skor: Oyuncu 2 - Bilgisayar 1\n",
      "\n",
      "Tebrikler, oyunu kazandınız!\n",
      "Başka bir oyun oynamak ister misiniz? (Evet/Hayır): EVT\n",
      "Geçersiz seçim! Lütfen 'Evet' veya 'Hayır' yazın.\n",
      "Başka bir oyun oynamak ister misiniz? (Evet/Hayır): HYR\n",
      "Geçersiz seçim! Lütfen 'Evet' veya 'Hayır' yazın.\n",
      "Başka bir oyun oynamak ister misiniz? (Evet/Hayır): hAYIR\n",
      "Geçersiz seçim! Lütfen 'Evet' veya 'Hayır' yazın.\n",
      "Başka bir oyun oynamak ister misiniz? (Evet/Hayır): Hayır\n",
      "Oyunu sonlandırıyorsunuz. Teşekkürler!\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "\n",
    "def tas_kagit_makas_Harun_Kaya():\n",
    "    print(\"Taş, Kağıt, Makas Oyununa Hoşgeldiniz!\")\n",
    "    print(\"Oyunun kuralları basit: Taş makası yener, Makas kağıdı yener, Kağıt taşı yener.\")\n",
    "    print(\"İlk iki turu kazanan oyunu kazanır. İyi şanslar!\")\n",
    "\n",
    "    options = [\"Taş\", \"Kağıt\", \"Makas\", \"Çıkış\"]\n",
    "\n",
    "    while True:\n",
    "        player_wins = 0\n",
    "        computer_wins = 0\n",
    "        total_games = 0\n",
    "\n",
    "        while player_wins < 2 and computer_wins < 2:\n",
    "            total_games += 1\n",
    "            print(f\"\\nTur {total_games} - Oyuncu {player_wins} - Bilgisayar {computer_wins}\")\n",
    "            \n",
    "            # Kullanıcının seçimini alıyoruz\n",
    "            player_choice = input(\"Lütfen seçiminizi yapın (Taş, Kağıt, Makas veya Çıkış): \").capitalize()\n",
    "\n",
    "            # Eğer kullanıcı \"Çıkış\" seçeneğini seçerse, oyundan çıkılır\n",
    "            if player_choice == \"Çıkış\":\n",
    "                print(\"Oyundan çıkıyorsunuz. Teşekkürler!\")\n",
    "                return\n",
    "            \n",
    "            # Geçersiz seçim yapılmışsa uyarı verilir\n",
    "            if player_choice not in options[:-1]:  # Sadece \"Taş\", \"Kağıt\", \"Makas\" seçeneklerini kontrol eder.\n",
    "                print(\"Geçersiz bir seçim yaptınız, lütfen tekrar deneyin.\")\n",
    "                continue\n",
    "\n",
    "            # Bilgisayarın rastgele bir seçim yapması\n",
    "            computer_choice = random.choice(options[:3])  # Bilgisayar sadece Taş, Kağıt, Makas seçeneklerini seçer.\n",
    "            print(f\"Bilgisayarın seçimi: {computer_choice}\")\n",
    "\n",
    "            # Oyuncunun ve bilgisayarın seçimine göre kazanan belirlenir\n",
    "            if player_choice == computer_choice:\n",
    "                print(\"Berabere!\")\n",
    "            elif (player_choice == \"Taş\" and computer_choice == \"Makas\") or \\\n",
    "                 (player_choice == \"Makas\" and computer_choice == \"Kağıt\") or \\\n",
    "                 (player_choice == \"Kağıt\" and computer_choice == \"Taş\"):\n",
    "                print(\"Bu turu kazandınız!\")\n",
    "                player_wins += 1\n",
    "            else:\n",
    "                print(\"Bu turu bilgisayar kazandı!\")\n",
    "                computer_wins += 1\n",
    "\n",
    "            # Her turdan sonra skor güncellenir\n",
    "            print(f\"Skor: Oyuncu {player_wins} - Bilgisayar {computer_wins}\")\n",
    "\n",
    "        # Turların bitiminden sonra genel galip belirlenir\n",
    "        if player_wins == 2:\n",
    "            print(\"\\nTebrikler, oyunu kazandınız!\")\n",
    "        else:\n",
    "            print(\"\\nBilgisayar oyunu kazandı. Şansınızı tekrar deneyin!\")\n",
    "\n",
    "        # Oyunun tekrarlanıp tekrarlanmayacağı sorulur\n",
    "        while True:\n",
    "            play_again = input(\"Başka bir oyun oynamak ister misiniz? (Evet/Hayır): \").capitalize()\n",
    "            if play_again == \"Evet\":\n",
    "                break\n",
    "            elif play_again == \"Hayır\":\n",
    "                print(\"Oyunu sonlandırıyorsunuz. Teşekkürler!\")\n",
    "                return\n",
    "            else:\n",
    "                print(\"Geçersiz seçim! Lütfen 'Evet' veya 'Hayır' yazın.\")\n",
    "\n",
    "        # Bilgisayarın oyuna devam etmek isteyip istemediği belirlenir\n",
    "        computer_play_again = random.choice([\"Evet\", \"Hayır\"])\n",
    "        print(f\"Bilgisayarın devam etme kararı: {computer_play_again}\")\n",
    "        if computer_play_again != \"Evet\":\n",
    "            print(\"Bilgisayar oynamak istemiyor. Oyun sona erdi.\")\n",
    "            break\n",
    "\n",
    "# Fonksiyonu çalıştırmak için:\n",
    "tas_kagit_makas_Harun_Kaya()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bc605189",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
